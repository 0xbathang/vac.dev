{"pageProps":{"markdown":{"content":"\nWaku is our fork of Whisper where we address the shortcomings of Whisper in an iterative manner. We've seen a in [previous post](https://vac.dev/fixing-whisper-with-waku) that Whisper doesn't scale, and why. In this post we'll talk about what the current state of Waku is, how many users it can support, and future plans. \n\n## Current state\n\n**Specs:**\n\nWe released [Waku spec v0.3](https://rfc.vac.dev/spec/6) this week! You can see the full changelog [here](https://rfc.vac.dev/spec/6/#changelog).\n\nThe main change from 0.2 is making the handshake more flexible. This enables us to communicate topic interest immediately without ambiguity. We also did the following:\n\n- added recommendation for DNS based discovery\n- added an upgradability and compatibility policy\n- cut the spec up into several components\n\nWe cut the spec up in several components to make Vac as modular as possible. The components right now are:\n\n- Waku (main spec), currently in [version 0.3.0](https://rfc.vac.dev/spec/6)\n- Waku envelope data field, currently in [version 0.1.0](https://rfc.vac.dev/spec/7)\n- Waku mailserver, currently in [version 0.2.0](https://rfc.vac.dev/spec/8)\n\nWe can probably factor these out further as the main spec is getting quite big, but this is good enough for now.\n\n**Clients:**\n\nThere are currently two clients that implement Waku v0.3, these are [Nimbus (Update: now nim-waku)](https://github.com/status-im/nim-waku) in Nim and [status-go](https://github.com/status-im/status-go) in Go.\n\nFor more details on what each client support and don't, you can follow the [work in progress checklist](https://github.com/vacp2p/pm/issues/7).\n\nWork is currently in progress to integrate it into the [Status core app](https://github.com/status-im/status-react/pull/9949). Waku is expected to be part of their upcoming 1.1 release (see [Status app roadmap (link deprecated)](https://trello.com/b/DkxQd1ww/status-app-roadmap)).\n\n**Simulation:**\n\nWe have a [simulation](https://github.com/status-im/nim-waku/blob/master/waku/v1/node/quicksim.nim) that verifies - or rather, fails to falsify - our [scalability model](https://vac.dev/fixing-whisper-with-waku). More on the simulation and what it shows below.\n\n## How many users does Waku support?\n\nThis is our current understanding of how many users a network running Waku can support. Specifically in the context of the Status chat app, since that's the most immediate consumer of Waku. It should generalize fairly well to most deployments.\n\n**tl;dr (for Status app):**\n- beta: 100 DAU\n- v1: 1k DAU\n- v1.1 (waku only): 10k DAU (up to x10 with deployment hotfixes)\n- v1.2 (waku+dns): 100k DAU (can optionally be folded into v1.1)\n\n*Assuming 10 concurrent users = 100 DAU. Estimate uncertainty increases for each order of magnitude until real-world data is observed.*\n\nAs far as we know right now, these are the bottlenecks we have:\n\n- Immediate bottleneck - Receive bandwidth for end user clients (aka ‘Fixing Whisper with Waku’)\n- Very likely bottleneck - Nodes and cluster capacity (aka ‘DNS based node discovery’)\n- Conjecture but not unlikely to appear- Full node traffic (aka ‘the routing / partition problem’)\n\nWe've already seen the first bottleneck being discussed in the initial post. Dean wrote a post on [DNS based discovery](https://vac.dev/dns-based-discovery) which explains how we will address the likely second bottleneck. More on the third one in future posts.\n\nFor more details on these bottlenecks, see [Scalability estimate: How many users can Waku and the Status app support?](https://discuss.status.im/t/scalability-estimate-how-many-users-can-waku-and-the-status-app-support/1514).\n\n## Simulation\n\nThe ultimate test is real-world usage. Until then, we have a simulation thanks to Kim De Mey from the Nimbus team!\n\n![](/img/waku_simulation.jpeg)\n\nWe have two network topologies, Star and full mesh. Both networks have 6 full nodes, one traditional light node with bloom filter, and one Waku light node.\n\nOne of the full nodes sends 1 envelope over 1 of the 100 topics that the two light nodes subscribe to. After that, it sends 10000 envelopes over random topics.\n\nFor light node, bloom filter is set to almost 10% false positive (bloom filter: n=100, k=3, m=512). It shows the number of valid and invalid envelopes received for the different nodes.\n\n**Star network:**\n\n| Description     | Peers | Valid | Invalid |\n|-----------------|-------|-------|---------|\n| Master node     |     7 | 10001 |       0 |\n| Full node 1     |     3 | 10001 |       0 |\n| Full node 2     |     1 | 10001 |       0 |\n| Full node 3     |     1 | 10001 |       0 |\n| Full node 4     |     1 | 10001 |       0 |\n| Full node 5     |     1 | 10001 |       0 |\n| Light node      |     2 |   815 |       0 |\n| Waku light node |     2 |     1 |       0 |\n\n**Full mesh:**\n\n| Description     | Peers | Valid | Invalid |\n|-----------------|-------|-------|---------|\n| Full node 0     |     7 | 10001 |   20676 |\n| Full node 1     |     7 | 10001 |    9554 |\n| Full node 2     |     5 | 10001 |   23304 |\n| Full node 3     |     5 | 10001 |   11983 |\n| Full node 4     |     5 | 10001 |   24425 |\n| Full node 5     |     5 | 10001 |   23472 |\n| Light node      |     2 |   803 |     803 |\n| Waku light node |     2 |     1 |       1 |\n\nThings to note:\n- Whisper light node with ~10% false positive gets ~10% of total traffic\n- Waku light node gets ~1000x less envelopes than Whisper light node\n- Full mesh results in a lot more duplicate messages, expect for Waku light node\n\nRun the simulation yourself [here](https://github.com/status-im/nim-waku/blob/master/waku/v1/node/quicksim.nim). The parameters are configurable, and it is integrated with Prometheus and Grafana.\n\n## Difference between Waku and Whisper\n\nSummary of main differences between Waku v0 spec and Whisper v6, as described in [EIP-627](https://eips.ethereum.org/EIPS/eip-627):\n\n- Handshake/Status message not compatible with shh/6 nodes; specifying options as association list\n- Include topic-interest in Status handshake\n- Upgradability policy\n- `topic-interest` packet code\n- RLPx subprotocol is changed from shh/6 to waku/0.\n- Light node capability is added.\n- Optional rate limiting is added.\n- Status packet has following additional parameters: light-node, confirmations-enabled and rate-limits\n- Mail Server and Mail Client functionality is now part of the specification.\n- P2P Message packet contains a list of envelopes instead of a single envelope.\n\n## Next steps and future plans\n\nSeveral challenges remain to make Waku a robust and suitable base\ncommunication protocol. Here we outline a few challenges that we are addressing and will continue to work on:\n\n- scalability of the network\n- incentived infrastructure and spam-resistance\n- build with resource restricted devices in mind, including nodes being mostly offline\n\nFor the third bottleneck, a likely candidate for fixing this is Kademlia routing. This is similar to what is done in [Swarm's](https://www.ethswarm.org/) PSS. We are in the early stages of experimenting with this over libp2p in [nim-libp2p](https://github.com/status-im/nim-libp2p). More on this in a future post!\n\n## Acknowledgements\n\n*Image from \"caged sky\" by mh.xbhd.org is licensed under CC BY 2.0 (https://ccsearch.creativecommons.org/photos/a9168311-78de-4cb7-a6ad-f92be8361d0e)*\n","metadata":{"layout":"post","name":"Waku Update","title":"Waku Update","date":"2020-02-14T12:00:00.000Z","author":"oskarth","published":true,"permalink":"/waku-update","categories":"research","summary":"A research log. What's the current state of Waku? How many users does it support? What are the bottlenecks? What's next?","image":"/img/waku_infrastructure_sky.jpg","discuss":"https://forum.vac.dev/t/waku-update-where-are-we-at/34"},"toc":[{"content":"Current state","slug":"current-state","lvl":2,"i":0,"seen":0},{"content":"How many users does Waku support?","slug":"how-many-users-does-waku-support","lvl":2,"i":1,"seen":0},{"content":"Simulation","slug":"simulation","lvl":2,"i":2,"seen":0},{"content":"Difference between Waku and Whisper","slug":"difference-between-waku-and-whisper","lvl":2,"i":3,"seen":0},{"content":"Next steps and future plans","slug":"next-steps-and-future-plans","lvl":2,"i":4,"seen":0},{"content":"Acknowledgements","slug":"acknowledgements","lvl":2,"i":5,"seen":0}]},"navProps":{"metadata":{"published":true,"title":"Waku Update","layout":"post","name":"Waku Update","date":"2020-02-14T12:00:00.000Z","author":"oskarth","permalink":"/waku-update","categories":"research","summary":"A research log. What's the current state of Waku? How many users does it support? What are the bottlenecks? What's next?","image":"img/waku_infrastructure_sky.jpg","discuss":"https://forum.vac.dev/t/waku-update-where-are-we-at/34"},"navOrder":1581681600,"localPath":"research/2020-02-14-waku-update.md","path":["waku-update"],"children":[],"isDir":false},"routeParams":{"path":["waku-update"]}},"__N_SSG":true}